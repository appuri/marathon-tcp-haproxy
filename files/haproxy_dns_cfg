#!/bin/bash
set -o errexit -o nounset -o pipefail
function -h {
cat <<\USAGE
 USAGE: haproxy_cfg <marathon host:port>

haproxy_cfg generates a config file to run HAProxy on localhost and proxy to a number of backend hosts.

To gracefully reload haproxy:

:; haproxy -f /path/to/config -p /var/run/haproxy.pid -sf $(cat /var/run/haproxy.pid)

USAGE
}; function --help { -h ;}

function header {
  cat <<EOF
global
  log 127.0.0.1 local0
  log 127.0.0.1 local1 notice
  maxconn 4096

defaults
  log         global
  retries     3
  maxconn     2000
  contimeout  5000
  clitimeout  50000
  srvtimeout  50000

EOF
}

function marathon_apps {
  z="`curl -H "Accept: text/plain" -s "$1/v2/tasks"`"
  backend "$z"
}

function backend {
  while IFS= read
  do
    set -- $REPLY
    local name="$1"
    local port="$2"
    shift 2

    if [ "${port}" = 0 ]; then
        continue
    fi

    cat <<EOF

listen ${name}_cluster
  bind ${HAPROXY_HOST}:${port}
  mode tcp
  option tcplog
  balance leastconn
EOF

    SERVERS=""
    while [[ $# -gt 0 ]]
    do
      SERVER=$(echo $1 | sed 's/\./-/g' | sed 's/:/-/g')
      SERVERS="${SERVERS}
  server ${name}-${SERVER} $1 check"
      shift
    done

    echo "${SERVERS}" | sort
  done <<< "$1"
}

function config {
  header
  marathon_apps "$@"
}

function main {
  config "$@"
}

function msg { out "$*" >&2 ;}
function err { local x=$? ; msg "$*" ; return $(( $x == 0 ? 1 : $x )) ;}
function out { printf '%s\n' "$*" ;}

if [[ ${1:-} ]] && declare -F | cut -d' ' -f3 | fgrep -qx -- "${1:-}"
then "$@"
else main "$@"
fi
