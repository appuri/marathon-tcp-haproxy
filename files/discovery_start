#!/bin/bash

set -e
run_command() {
  echo "Running $1"
  bash -c "$1" 2>&1 &
  HAPROXY_PID="$!"
}

find_marathon () {
  DISCOVERY_HOST=$(/usr/bin/fleetctl list-units | gawk '/marathon/ {r = gensub(/.*\/(.*)/,"\\1", "g", $2); print r}')
  DISCOVERY_URL="${DISCOVERY_HOST}:${DISCOVERY_PORT}"
  echo "Detected DISCOVERY_URL: ${DISCOVERY_URL}"
}

reload_conf() {
  PREV_MD5=$(md5sum /etc/haproxy/haproxy.cfg | awk '{print $1}')
  MARATHON_AVAILABLE=1
  haproxy_dns_cfg $DISCOVERY_URL > /etc/haproxy/haproxy.cfg.next || MARATHON_AVAILABLE=0
  if [ $MARATHON_AVAILABLE -ne 1 ]; then
      echo "Marathon is not available, detecting marathon"
      find_marathon
      return
  fi

  CURR_MD5=$(md5sum /etc/haproxy/haproxy.cfg.next | awk '{print $1}')
  if [ "${PREV_MD5}" = "${CURR_MD5}" ]; then
      echo "Config is the same"
      return
  fi

  mv /etc/haproxy/haproxy.cfg.next /etc/haproxy/haproxy.cfg

  echo "Reloading conf"
  run_command "haproxy -f /etc/haproxy/haproxy.cfg -sf $HAPROXY_PID"
}

onexit() {
  echo Sending SIGTERM to haproxy
  kill $HAPROXY_PID &>/dev/null
  sleep 1
}
trap onexit SIGINT SIGTERM EXIT

find_marathon
run_command "haproxy -f /etc/haproxy/haproxy.cfg"
while true; do reload_conf; sleep $RELOAD_TTL; done
